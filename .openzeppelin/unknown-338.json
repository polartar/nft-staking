{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x19fe91EA9890aa8b4AFe941851760C19b6186bbA",
      "txHash": "0x84413563150eefca3c96e83fc965e246c4e780698be3de376183e8259f972b4e",
      "kind": "uups"
    },
    {
      "address": "0xddbb9a8E1F996C763c037C049fAE5879137D9Bab",
      "txHash": "0xde42390e8077459e7c035c75bd04ef8d2edf1c631ff03b2947fb174e1c60e223",
      "kind": "uups"
    },
    {
      "address": "0x87e10d181b988E1dB31E0A23356845fAbD253f8B",
      "txHash": "0x6b7685f25485fd4a35ead4ed4846bb53cfd3fe2900b797d0acc70ed648cd66cf",
      "kind": "uups"
    },
    {
      "address": "0x15876C450638158F48392F01dE2CEa51eccc7840",
      "txHash": "0xdce2c6cd2343ae9d43e2d78f9f5d3b40135de32d3868bd51dd5d82c54f9d2a73",
      "kind": "uups"
    }
  ],
  "impls": {
    "25173dfd0dfb80660a4ae6d597f951df859a558a5297afec3f003a75e592e4d1": {
      "address": "0x7a8dA5Abc06148dEc5c7ceaD43eF4b5f737Eaab0",
      "txHash": "0xea0405c2b7b1f4af4c523af74263982bf65e71343ffe2ef14f607a8d0fea5b9d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          }
        ],
        "types": {
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "bb7e2a2e426e130f635e35bcf57c2d0f6fcced27c1224fde86018ee03b2c819e": {
      "address": "0x56acaaBC071d36f5b76eBEbDeA3C654d2C123154",
      "txHash": "0x420a31c6f493452a906cab96d8eb7f223e0ed3e69c7db724e7d9ddd73d4f2c8b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "PullPaymentUpgradeable",
            "label": "_escrow",
            "type": "t_contract(EscrowUpgradeable)2679",
            "src": "@openzeppelin/contracts-upgradeable/security/PullPaymentUpgradeable.sol:28"
          },
          {
            "contract": "PullPaymentUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PullPaymentUpgradeable.sol:76"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:68"
          },
          {
            "contract": "Marketplace",
            "label": "memberships",
            "type": "t_contract(IERC1155)4255",
            "src": "contracts/Marketplace.sol:53"
          },
          {
            "contract": "Marketplace",
            "label": "vipFee",
            "type": "t_uint16",
            "src": "contracts/Marketplace.sol:55"
          },
          {
            "contract": "Marketplace",
            "label": "memberFee",
            "type": "t_uint16",
            "src": "contracts/Marketplace.sol:56"
          },
          {
            "contract": "Marketplace",
            "label": "regFee",
            "type": "t_uint16",
            "src": "contracts/Marketplace.sol:57"
          },
          {
            "contract": "Marketplace",
            "label": "activeListings",
            "type": "t_struct(Map)8281_storage",
            "src": "contracts/Marketplace.sol:59"
          },
          {
            "contract": "Marketplace",
            "label": "completeListings",
            "type": "t_struct(Map)8281_storage",
            "src": "contracts/Marketplace.sol:60"
          },
          {
            "contract": "Marketplace",
            "label": "cancelledListings",
            "type": "t_struct(Map)8281_storage",
            "src": "contracts/Marketplace.sol:61"
          },
          {
            "contract": "Marketplace",
            "label": "listingId",
            "type": "t_struct(Counter)2215_storage",
            "src": "contracts/Marketplace.sol:63"
          },
          {
            "contract": "Marketplace",
            "label": "royalties",
            "type": "t_mapping(t_address,t_struct(Royalty)8727_storage)",
            "src": "contracts/Marketplace.sol:65"
          }
        ],
        "types": {
          "t_contract(IERC1155)4255": {
            "label": "contract IERC1155"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_struct(Map)8281_storage": {
            "label": "struct IterableMapping.Map",
            "members": [
              {
                "label": "keys",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "idToKey",
                "type": "t_mapping(t_uint256,t_bytes32)"
              },
              {
                "label": "values",
                "type": "t_mapping(t_bytes32,t_struct(Listing)8260_storage)"
              },
              {
                "label": "indexOf",
                "type": "t_mapping(t_bytes32,t_uint256)"
              },
              {
                "label": "inserted",
                "type": "t_mapping(t_bytes32,t_bool)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(Listing)8260_storage)": {
            "label": "mapping(bytes32 => struct IterableMapping.Listing)"
          },
          "t_struct(Listing)8260_storage": {
            "label": "struct IterableMapping.Listing",
            "members": [
              {
                "label": "listingId",
                "type": "t_uint256"
              },
              {
                "label": "nftId",
                "type": "t_uint256"
              },
              {
                "label": "seller",
                "type": "t_address"
              },
              {
                "label": "nft",
                "type": "t_address"
              },
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "fee",
                "type": "t_uint256"
              },
              {
                "label": "purchaser",
                "type": "t_address"
              },
              {
                "label": "is1155",
                "type": "t_bool"
              },
              {
                "label": "listingTime",
                "type": "t_uint256"
              },
              {
                "label": "saleTime",
                "type": "t_uint256"
              },
              {
                "label": "endingTime",
                "type": "t_uint256"
              },
              {
                "label": "royalty",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Counter)2215_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(Royalty)8727_storage)": {
            "label": "mapping(address => struct Marketplace.Royalty)"
          },
          "t_struct(Royalty)8727_storage": {
            "label": "struct Marketplace.Royalty",
            "members": [
              {
                "label": "ipHolder",
                "type": "t_address"
              },
              {
                "label": "percent",
                "type": "t_uint16"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_contract(EscrowUpgradeable)2679": {
            "label": "contract EscrowUpgradeable"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    }
  }
}
